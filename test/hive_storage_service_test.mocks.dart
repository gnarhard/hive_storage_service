// Mocks generated by Mockito 5.3.2 from annotations
// in hive_storage_service/test/hive_storage_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hive_storage_service/src/hive_storage_service_base.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HiveStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveStorageService extends _i1.Mock
    implements _i2.HiveStorageService {
  @override
  List<String> get cacheKeys => (super.noSuchMethod(
        Invocation.getter(#cacheKeys),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  set cacheKeys(List<String>? _cacheKeys) => super.noSuchMethod(
        Invocation.setter(
          #cacheKeys,
          _cacheKeys,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Function get adapterRegistrationCallback => (super.noSuchMethod(
        Invocation.getter(#adapterRegistrationCallback),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as Function);
  @override
  _i3.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<T?> get<T>(
    String? key, {
    T? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i3.Future<T?>.value(),
        returnValueForMissingStub: _i3.Future<T?>.value(),
      ) as _i3.Future<T?>);
  @override
  _i3.Future<void> set(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> destroy(String? key) => (super.noSuchMethod(
        Invocation.method(
          #destroy,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<dynamic> wipe() => (super.noSuchMethod(
        Invocation.method(
          #wipe,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
